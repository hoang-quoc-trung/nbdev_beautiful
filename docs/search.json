[
  {
    "objectID": "card_overview.html",
    "href": "card_overview.html",
    "title": "Introducing Cards",
    "section": "",
    "text": "A deck of cards demo of nbdev"
  },
  {
    "objectID": "card_overview.html#install",
    "href": "card_overview.html#install",
    "title": "Introducing Cards",
    "section": "Install",
    "text": "Install\nInstall using:\npip install nbdev_cards\nor:\nconda install -c fastai nbdev_cards"
  },
  {
    "objectID": "card_overview.html#how-to-use",
    "href": "card_overview.html#how-to-use",
    "title": "Introducing Cards",
    "section": "How to use",
    "text": "How to use\nThis card provides a Card class you can use to create, display, and compare playing cards:"
  },
  {
    "objectID": "05_create_page.html",
    "href": "05_create_page.html",
    "title": "TODO",
    "section": "",
    "text": "Chi tiết cách tạo page trên Github và edit page bằng Markdown\n\n\n\n\n\nSau bạn đã khởi tạo nbdev trên repository của mình bằng command nbdev_new, bạn nên setup một vài thông tin như sau để cho việc push code lên Github Page trở lên thành công hơn:\nTrên local: Bạn hãy sửa file settings.ini bằng cách thay đổi doc_path=_docs thành doc_path=docs. Sau đó vô folder .github/workflows, mở file deploy.yaml và sửa branches: [ \"main\", \"master\" ] thành branch bạn đang làm việc với nbdev.\nTrên Github Page: Tại repository bạn hãy nhấp vào Setting > Pages > Branch, tại đây hãy chọn branch mà bạn đã set trên local, thay đổi /(root) thành /docs và ấn save. \nSau khi đã setup xong mọi thứ, bạn có thể viết page thông qua file notebook .ipynb trong folder nbs. Tại mỗi file notbook bạn nên bắt đầu với cell đầu tiên bằng một title (# title) và một subtitle (> subtitle), title này sẽ được sử dụng để hiển thị ở sidebar trên page, ví dụ:\n\nĐặt tên file notebook theo thứ tự, điều này sẽ khiến nội dung sidebar sẽ theo thứ tự bạn muốn. Trong đó theo mặc định, file index.ipynb sẽ có thứ tự đầu tiên và là đóng vai trò làm file readme, ví dụ như sau:\n\nTrước khi push lên github, bạn nên kiểm tra xem page có theo như ý muốn của bạn hay không bằng cách sử dụng command nbdev_preview để xem trước page trên local.\nĐể push repository lên Github Page, bạn hãy sử dụng các command trên terminal theo thứ tự sau:\nnbdev_export\nnbdev_prepare\nnbdev_proc_nbs\nnbdev_readme\nnbdev_docs\ngit add .\ngit commit -m \"message\"\ngit push\nCuối cùng, để xem page trên Github bạn hãy nhấp vào Setting > Pages như trong hình: \n\n\n\n\n\nĐể thêm image, bạn hãy sử dụng form ![title](dir_image),ví dụ:\n![The San Juan Mountains are beautiful!](https://www.backpacker.com/wp-content/uploads/2014/05/wilson-peak-autumn.jpg)\n\n\n\n\n\n\nĐể thêm video, bạn hãy sử dụng form [![title](link_image)](link_video), ví dụ:\n[![nbdev tutorial](https://i.ytimg.com/vi/l7zS8Ld4_iA/sddefault.jpg)](https://www.youtube.com/watch?v=l7zS8Ld4_iA)\n\nHoặc bạn có thể nhúng video bằng cách chọn video YouTube mà bạn muốn chèn vào, nhấn vào nút “Chia sẻ” và chọn “Nhúng” để lấy mã nhúng. Sau đó sao chép mã nhúng vào notebook\n Ví dụ:"
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Test",
    "section": "",
    "text": "#| echo: true\nprint(\"Hello\")\n\nprint(\"Hello\")\n\nHello\n\n\n\n\n\n#| echo: false\nprint(\"Hello\")\n\n\nHello\n\n\n\n\n\n#| output: asis\nprint(\"Hello\")\nprint(\"Hello\")\nHello\n\n\n\n#| output: true\nprint(\"Hello\")\n\nprint(\"Hello\")\n\nHello\n\n\n\n\n\n#| output: false\nprint(\"Hello\")\n\nprint(\"Hello\")\n\n\n\n\nprint(\"Hide line\") #| hide_line\nprint(\"Hello\")\n\nprint(\"Hello\")\n\nHide line\nHello\n\n\n\n\n\n#|filter_stream FutureWarning MultiIndex\nprint('\\n'.join(['A line', 'Foobar baz FutureWarning blah', 'zig zagMultiIndex zoom', 'Another line.']))\n\nprint('\\n'.join(['A line', 'Foobar baz FutureWarning blah', 'zig zagMultiIndex zoom', 'Another line.']))\n\nA line\nAnother line.\n\n\n\n\n\n#| code-fold: true\nprint('Hello')\nprint('nbdev')\n\n\nCode\nprint('Hello')\nprint('nbdev')\n\n\nHello\nnbdev\n\n\n\n\n\n#| code-fold: show\nprint('Hello')\nprint('nbdev')\n\n\nCode\nprint('Hello')\nprint('nbdev')\n\n\n\n\n\n#| exporti\ndef test():\n     print(\"Test nbdev 2\")\n\n\n\n#| eval: false\nraise Exception(\"I'm not raised because I'm not run\")\n\nraise Exception(\"I'm not raised because I'm not run\")\n\nException: I'm not raised because I'm not run"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev Tutorial",
    "section": "",
    "text": "Basic Tutorial On How To Use nbdev\nDirectives\nHow To Create A Beautiful Page\nCard Example\n\nCard\nDesk\n\n\n\n\nĐể biết thêm chi tiết về cách sử dụng hãy truy cập nbdev official tutorial"
  },
  {
    "objectID": "index.html#why-nbdev",
    "href": "index.html#why-nbdev",
    "title": "nbdev Tutorial",
    "section": "Why nbdev?",
    "text": "Why nbdev?\nLà một AI engineer, bạn chủ yếu làm việc với các file .ipynb . Tuy nhiên, trong quá trình triển khai production, các file .py là bắt buộc để các model AI có thể hoạt động với Web backend. Tuy nhiên, hầu hết những người mới bắt đầu đều thiếu software skill và khó khăn trong việc code các file Python. Đó là lý do tại sao nbdev ra đời và đến giải cứu bạn.\nNbdev là một battery-ready notebook development platform, được xây dựng trên Quarto platform. Nó cho phép:\n- Đồng bộ giữa file .ipynb và file .py\n- Tạo nhanh document sử dụng markdown (*) trong khi develop\n- Publish package của bạn trên PyPI hoặc Conda\n- Continuous Integration với git và chạy trên git page\n- Test, code, document ở một nơi\n(*) Markdown thường được sử dụng trong github repo với tên readme.md, để tìm hiểu thêm về Markdown hãy truy cập Markdown Guide."
  },
  {
    "objectID": "how_to_use_nbdev.html",
    "href": "how_to_use_nbdev.html",
    "title": "How To Use nbdev",
    "section": "",
    "text": "1. Installation\n\nPython\nTrình quản lý Python package: Khuyến khích sử dụng conda hoặc pip\nJupyter Notebook: pip install notebook hoặc conda install notebook\nnbdev: pip install nbdev hoặc conda install -c fastai nbdev\nQuarto: nbdev_install_quarto\n\n\n\n2. Tạo github repository trống và clone về local\n\nBạn có thể tạo nhanh một github repo thông qua link này: github.com/new.\nNhớ thêm description cho repo, bởi vì nbdev sẻ sử dụng nó. Không tạo tạo các file README.md, .gitignore, hoặc license.\nClone code về local và di chuyển đến repo đó bằng command cd name_repo trên terminal.\n\n\n\n3. Khởi tạo nbdev trên repository\n\nĐể khởi tạo nbdev trên repository, bạn hãy sử dụng command nbdev_new trên terminal\nSau khi khởi tạo nbdev, một số file và folder được tạo ra:\n.github Chứa workflow cho CI.\n_proc\nnbs Là viết tắt của “notebook source”, đây là nơi làm việc của các file notebook .ipynb\ntest_nbdev Sau khi xử lý các tệp notebook, các tệp .py sẽ được export vô lib này (tên folder này dựa trên tên repository)\n.gitignore Chỉ định file/folder không mong muốn khi push lên github\nLICENSE\nMANIFEST.in\nREADME.md File này được đồng bộ từ nbs/index.ipynb, nếu muốn edit file ‘README.md’ hãy vô file ‘index.ipynb’ edit\nsetting.ini Chứa các thông số cấu hình cho project như tên tác giả, tên dự án, version …\nsetting.py\n\n\n\n\n4. Push repository đã được khởi tạo nbdev lên GitHub\n\nCác command sau để push lên github:\ngit add .\ngit commit -m 'chore: initial commit'\ngit push\n\nSau khi push reposirory nbdev của bạn lên GitHub, điều hướng đến Actions, nếu bạn sẽ thấy CI bị Fail. Điều này là do GitHub mặc định giới hạn PAT permission, hãy nhấp vào settings trong repository Settings > Actions > General > Workflow permissions > Read and write permission > Save. Bây giờ CI của bạn sẽ chạy lại và hoạt động ngay.\n\n\n\n5. Kích hoạt GitHub Pages \n\nBạn cần kích hoạt GitHub Pages cho repository của mình bằng cách nhấp vào settings trong repository Setting > Pages > Branch chọn branch bạn muốn và Save. \nViệc kích hoạt GitHub Pages này sẽ tạo ra một pages docs trông beautiful như này nbdev page example. \n\n\n\n6. Các bước cơ bản để build một nbdev repository\n\nInstall hooks sử dụng command nbdev_install_hooks.\nHooks đảm bảo rằng các kiểm tra và các processes cần thiết được chạy mỗi khi có thay đổi được thực hiện trên kho repository, như chuyển đổi các file notebooks thành file Python và kiểm tra syntax errors, giúp giữ code và repository được tổ chức và nhất quán.\nEdit .ipynb\nTruy cập vào folder /nbs để tạo và edit các file notebook ở đây, chi tiết các viết nbdev notebook sẽ được nêu trong phần Directives.\nBuild library sử dụng command nbdev_export.\nSau khi viết xong file notebook, bạn hãy sử dụng command này giúp convert từ file Jupyter Notebook .ipynb thành file Python .py và sử dụng làm library trong project, giúp code có thể reusable, maintainable và dễ dàng tích hợp vào các project khác. Ngoài ra nbdev còn convert file .ipynb hiển thị trên GitHub Page (khi push).\nNote: Bạn cũng có thể sử dụng import nbdev; nbdev.nbdev_export() tại cuối mỗi file notebook để export thay vì sử dụng command.\n\n\nVí dụ trong hình dưới, đây là file 00_card.ipynb trong folder /nbs \n\n\nVà đây là kết quả khi sử dụng command nbdev_export, nbdev sẽ convert file /nbs/00_card.ipynb thành file /nbdev_cards/card.py (cụ thể tại những cell có #| export trên notebook sẽ được convert qua file .py) \n\n\nNgoài ra file 00_card.ipynb cũng sẽ được update lên GitHub Page khi push repository lên github thông qua CI của nbdev. Trong đó các số thứ tự trước tên file ipynb sẽ quyết định thứ tự của chúng trên page, file index.ipynb sẽ nằm đầu tiên (chi tiết các tạo page sẽ được nêu trong phần Create And Edit Page). \n\n\nInstall package sử dụng command pip install -e '.[dev]'.\nCommand này được sử dụng trong quá trình develop một Python package để cho phép package được cài đặt và sử dụng trong environment trực tiếp trong khi source code đang được chỉnh sửa, thường được sử dụng sau khi bạn export một file notebook.\nNote: Nếu bạn thực hiện các thay đổi đối với code mà không ảnh hưởng đến quá trình install (chẳng hạn như thêm các feature mới hoặc fix bug), bạn có thể không cần phải chạy lệnh này.\nPreview docs sử dụng command nbdev_preview.\nSau khi hoàn chỉnh một file notebook, khi run command này terminal sẽ hiển thị một browser link ở định dạng HTML chạy trên local (ví dụ như http://localhost:3744/). Click vào link để xem trước các bản notebook như thế nào trước khi được đưa lên GitHub Page.\nPrepare change sử dụng command nbdev_prepare.\nSử dụng trước khi commit hoặc push lên github, để đảm bảo các module của bạn được export đúng cách và các bài test được vượt qua. Trong đó command nbdev_prepaređóng gói các lệnh sau:\nnbdev_export: Build file.py module từ Jupyter notebooks\nnbdev_test: Tests các file để kiểm tra bug\nnbdev_clean: Loại bỏ các output thừa trong notebook để tạo ra một phiên bản notebook “sạch” hơn để đăng trên Github\nnbdev_readme: Updates file README.md từ file index.ipynb.\nPush lên Github\nLỗi có thể xảy ra vì bạn quên chạy command nbdev_prepare. Vì vậy, hãy nhớ chạy command này trước khi push lên GitHub, các command để push github:\ngit add .\ngit commit -m <message>\ngit push"
  },
  {
    "objectID": "06_beautiful_page.html#setup",
    "href": "06_beautiful_page.html#setup",
    "title": "Custom Page",
    "section": "1. Setup",
    "text": "1. Setup\n\nYêu cầu: nbdev_install_quarto"
  },
  {
    "objectID": "06_beautiful_page.html#website",
    "href": "06_beautiful_page.html#website",
    "title": "Custom Page",
    "section": "2. Website",
    "text": "2. Website\n\nQuarto Websites là một nền tảng website builder cung cấp các công cụ để tạo và quản lý website một cách dễ dàng và nhanh chóng. Người dùng có thể tạo ra các trang web chuyên nghiệp, thương mại điện tử và blog chỉ trong vài phút mà không cần có kiến thức về lập trình hoặc thiết kế web. Thật may mắn nbdev được xây dựng trên Quarto, do đó chúng ta có thể dễ dàng sử dụng Quarto trên nbdev.\nMột vài option có sẵn từ để custom website navigation như: Hiển thị sidebar theo cấu trúc hierarchy, giao diện điều hướng page, sub-menus …\n\nĐể bắt đầu, bạn hãy mở file config _quarto.yml trong folder nbs để có thể edit.\n\n\nTop Navigation \n\nĐể custom top navigation, chúng ta sẽ edit ở entry navbar. Ví dụ sau, bạn có thể chỉ định các file .jpynb hoặc một link website nào đó:\n\n\n\nwebsite:\n  navbar:\n    background: primary\n    title: My site\n    search: true\n    left:\n      - text: \"Home\"\n        file: index.jpynb\n      - talks.jpynb\n      - about.jpynb\n\n\nTạo submenu:\n\n\nleft:\n  - text: \"More\"\n    menu:\n      - talks.jpynb\n      - about.jpynb\n\n\n\n\n\n\n\nTip\n\n\n\nChi tiết các option tham khảo here 📓\n\n\n\n\nSide Navigation\n\nĐể custom side navigation, chúng ta sẽ edit ở entry sidebar.\n\n\n\nwebsite:\n  sidebar:\n    style: \"docked\"\n    search: true\n    contents:\n      - section: \"Basics\"\n        contents:\n          - index.jpynb\n          - knitr-basics.jpynb\n          - jupyter-basics.jpynb\n      - section: \"Layout\"\n        contents:\n          - markdown-layout.jpynb\n          - knitr-layout.jpynb\n          - jupyter-layout.jpynb\n\n\n\n\n\n\n\nTip\n\n\n\nChi tiết các option tham khảo here 📓\n\n\n\n\nFavicon\n\nHiển thị logo trên tab trình duyệt\n\n\n\nwebsite:\n  favicon: logo.png\n\n\n\nPage Footern\n\nCustom nội dụng dưới cùng của page\n\n\n\nwebsite:\n    page-footer: \n    left: \"Copyright 2023, Trung Hoang\" \n    right: \n      - icon: github\n        href: https://github.com/hoangtrung020541/nbdev_beautiful\n      - icon: twitter \n        href: https://twitter.com/ \n    background: Gray\n    foreground: White\n    border: false\n\n\n\nSeparators\n\nTách nội dung giữa các sidebar bằng text: \"---\"\n\n\n\nwebsite:\n  sidebar:\n    contents:\n      - section: \"Quick start\"\n        contents:\n          - 03_how_to_use_nbdev.ipynb\n          - 04_directives.ipynb\n          - 05_create_page.ipynb\n          - 06_beautiful_page.ipynb\n      - text: \"---\"\n      - section: \"Examples\"\n        contents:\n          - 00_card_overview.ipynb\n          - 01_card.ipynb\n          - 02_desk.ipynb\n      - 07_test.ipynb\n\n\n\nSidebar Tools\n\nMột vài tool nho nhỏ bao gồm icon và href trên sidebar, lấy icon ở đây Bootstrap Icons.\n\n\n\nwebsite:\n  sidebar:\n    tools:\n      - icon: facebook\n        href: https://www.facebook.com/\n      - icon: discord\n        href: https://discord.com/\n      - icon: twitter\n        href: https://twitter.com\n      - icon: github\n        menu:\n          - text: Source Code\n            url:  https://github.com/hoangtrung020541/nbdev_beautiful\n          - text: Report a Bug\n            url:  https://github.com/hoangtrung020541/nbdev_beautiful/issues\n\n\n\nDark Mode\n\nBật chế độ cho phép chuyển đổi theme: darkly <-> flatly\n\n\n\nformat:\n  html:\n    theme:\n      light: flatly\n      dark: darkly\n    css: styles.css\n    toc: true\n\n\n\nTìm hiểu thêm tại Quarto - Website Navigation 😁 💨"
  },
  {
    "objectID": "06_beautiful_page.html#custom-content",
    "href": "06_beautiful_page.html#custom-content",
    "title": "Custom Page",
    "section": "3. Custom Content",
    "text": "3. Custom Content\nTrong nbdev, chúng ta có thể sử dụng HTML, CSS, Markdown để decore nội dung của page thông qua Markdown cell trong notebook.\n\nFormatting Links\n\nTest 1 –> [Test 1](07_test.ipynb)\nTest 2 –> <a style=\"color: red; text-decoration: none;\" href=\"07_test.ipynb\">Test 2</a>\nTest 3 –> <a class=\"link-hover\" href=\"07_test.ipynb\">Test 3</a>\n\n\n\n\n\n\n\nNote\n\n\n\nTest 1 sử dụng markdown.\nTest 2 sử dụng html.\nĐối với Test 3 hơi phức tạp, liên quan đến cả html và css nên cần phải sử dụng \nfile `styles.css` trong folder `nbs`. Cụ thể chúng ta sẽ tạo `class=\"link\"` ở \nđây, sau đó sẽ set các thuộc tính của class link tại file css như sau:\n\n\n\n.link{\n    color: #73D0FF;\n    text-decoration: none;\n}\n.link:hover{\n    color: #686868;\n    text-decoration: none;\n}\n.link:active{\n    color: black;\n    text-decoration: none;\n}\n\n\n\nCallout Blocks\n\nĐể làm được như vậy, sử dụng markdown syntax như sau:\n\n::: {.callout-note}\n    Note that there are five types of callouts, including:\n    `note`, `warning`, `important`, `tip`, and `caution`.\n:::\n\n\n::: {.callout-tip}\n    This is an example of a callout with a title.\n:::\n\n\n::: {.callout-caution collapse=\"true\"}\n    This is an example of a 'folded' caution callout that can be expanded by the user. You can \n    use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make a collapsible\n    callout that is expanded by default.\n:::"
  },
  {
    "objectID": "04_directives.html",
    "href": "04_directives.html",
    "title": "TODO",
    "section": "",
    "text": "Magic comments\n\n\nTrong nbdev, các directive (hay còn gọi là “magic comments”) là các câu lệnh đặc biệt được sử dụng để thực hiện các chức năng nhất định trong quá trình phát triển và tạo tài liệu cho package. Các directives bắt đầu bằng #| và được đặt ở đầu mỗi cell code trong Jupyter Notebook. Các directive được sử dụng như tín hiệu cho Quarto trong quá trình tạo docs. các tín hiệu này cho biết Quarto nên xử lý các ô như thế nào và định dạng tài liệu như thế nào.\n=> Tìm hiểu thêm về Quarto tại quarto.org\n\n\nCác directive sau đây để thực hiện các chức năng cho page, không áp dụng đối với file .py\n- #| hide Để ẩn cell code và output trên page.\n- #| echo: <true|false> Để ẩn cell code trên page và chỉ hiện output (false) , để hiện cả cell code và output trên page (true).\n- #| output: <true|false|asis> Để set hiển thị output, ẩn (false), hiện (true), hoặc hiển thị kiểu raw markdown (asis) trên page.\n- #| hide_line Để ẩn 1 dòng code trong cell notebook.\n- #| filter_stream <keyword> Lọc các dòng chứa từ khóa cụ thể trong kết quả output của cell.\n- #| code-fold: <show|true> Để thu gọn cell code.\n\n\n\n\n#| default_exp <name> Để tạo ra một Python package <name>.py từ tệp notebook hiện tại khi export.\n\n#| export Chỉ định một cell trong notebook sẽ được export đến file Python .py, ngoài ra directive này cũng tạo documentation chi tiết tại cell đó trên page.\n\n#| exports tương tự như #| export nhưng hiển thị thêm docs thông qua showdoc.show_doc.\n\n#| exportiĐể đánh dấu một hàm hay một đoạn code trong tệp notebook để được xuất ra như một phần của một module con riêng biệt, ví dụ sau: \n\n\n\n\n\n#| exec_doc: Tạo docs trên cell code.\n#| eval: <true|false> Khi để false, cell code sẽ được ignore trong quá trình test thông qua command nbdev_test.\n\n\n\n\nBạn có thể chạy command nbdev_help trên terminal để xem danh sách đầy đủ các command có sẵn:"
  }
]